{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"da0768f3-f5d2-54ac-abc0-d32dceb3e219","excerpt":"😎 컴퓨터네트워크 3계층이란?? network Layer의 주된 역할은 다른 네트워크 간의 통신을 가능하게 하는것입니다. 2계층인 Link layer 까지는 물리적으로 어느정도 인접한 상태를 고려했다면 이제는 전혀 다른 네트워크 간의 통신을 고려합니다. 이때, 중요한 것은 2가지입니다. 해당 계층 “내부”에서의 패킷의 흐름 (data plane) 해당 source -> destination 으로 흐르는 길을 찾기 (control plane) Routing protocol Routing Protocol이란 Routing을 정하는 방식들을 의미합니다. 크게 두가지로 이루어져 있습니다! 1. Link State 모든 라우터들이 다른 링크들에 대한 “모든” Cost를 알고 있는 경우 입니다.\n이 방식에서는 모든 노드에 대한 Link Cost를 알고 있기 때문에 다익스트라 알고리즘을 사용합니다. (전체 공유!!) image TSP를 떠올리면 쉽습니다. 위는 다익스트라자에서 길을 찾는 방법이…","frontmatter":{"categories":"짧은지식","title":"Network Layer (3계층)","date":"October 17, 2022"},"fields":{"slug":"/컴퓨터 네트워크 3계층/"}}},{"node":{"id":"319bfe48-8a51-54eb-9bd9-34686ef8bef2","excerpt":"😎 컴퓨터네트워크 2계층이란?? Link layer로 불리며 인접한 노드 끼리의 데이터를 전송하는 것을 관리합니다. 또한 이 과정에서 발생할 수 잇는 오류를 감지하고 수정합니다. image node는 모든 통신에 관련된 entity를 의미합니다. 각 노드간의 연결은 Link를 통해서 연결이 되어 있으며\n이 Link의 종류는 총 3가지가 있습니다. wired Links wirless Links LANs 데이터 링크 계층은 2개의 부계층으로 구성됩니다. LLC 와 MAC입니다. LLC는 논리적인 부분으로 네트워크 계층과 연결되며 Frame을 만드는것에 기여합니다\nMAC 은 물리적인 부분으로 1계층과 연결되어 있습니다. data-link layer는 물리적으로 연결된 node에 전송할 데이터의 frame을 만듭니다 직접 전송은 1계층에서 관리하며 어떻게 보내는지는 관심이 없습니다 image framing, Link access framing : 3계층에서 받은 데이터를 2계층에서 보낼 …","frontmatter":{"categories":"짧은지식","title":"Link layer","date":"October 12, 2022"},"fields":{"slug":"/컴퓨터네트워크 2계층/"}}},{"node":{"id":"0dce7f71-9161-533a-a127-3cb2048d9dd2","excerpt":"서론 폴더 정리를 하던 도중에 저번 학기에 작성한 레포트가 있어서, 이대로 없어지기보단 인터넷 어딘가에 떠도는게 아무래도 좋지 않을까 싶어 남겨봅니다. 레포트의 일부를 가져왔습니다. Maria Rilke 처음 듣자마자 꽤나 익숙한 이름이라고 생각이 들었을지도 모릅니다.\n“라이너 마리아 릴케” 가 바로 우리가 타자연습을 치면서 스쳐 지나간 그 이름이며 이 글의 주인공입니다. 프라하 출신으로 19세기 말부터 20세기 초까지 활동하며, 여러 시와 명언을 남겨 많은 사람들에게 영향을 남긴 시인입니다. 릴케의 여러 시중 지금 제가 맘에드는 시를 옮겼습니다. 천천히 한번 읽고 나머지 글도 천천히 읽어주시면 좋을것 같습니다. 바쁘시다면 이 시만 읽으셔도 좋습니다. 본문 릴케가 말하고자 하는 진정한 사랑과 소유(‘보다 인간적인 사랑’)에 대한 제가 이해한 바를 적어보려 합니다. 이를 ‘소유하지 않는 사랑’, ‘대상이 없는 사랑’과 함께 설명하겠습니다. 앞서 작성한 대상이 없는 사랑은 매우 모순적…","frontmatter":{"categories":"짧은지식","title":"릴케가 말하는 진정한 사랑과 소유","date":"October 05, 2022"},"fields":{"slug":"/릴케의 존재론적 사랑/"}}},{"node":{"id":"67aec17f-7b34-5442-be4a-07f3d66fbc59","excerpt":"1. 문제소개 3*n 타일링 가로 길이가 2이고 세로의 길이가 1인 직사각형 모양의 타일이 있습니다. 이 직사각형 타일을 이용하여 세로의 길이가 3이고 가로의 길이가 n인 바닥을 가득 채우려고 합니다. 타일을 채울 때는 다음과 같이 2가지 방법이 있습니다 타일을 가로로 배치 하는 경우\n타일을 세로로 배치 하는 경우 예를들어서 n이 8인 직사각형은 다음과 같이 채울 수 있습니다. 직사각형의 가로의 길이 n이 매개변수로 주어질 때, 이 직사각형을 채우는 방법의 수를 return 하는 solution 함수를 완성해주세요. 2. 문제풀이 각 시행별 필요사항들을 적어서 표현해야만 했다. 가장 이해가 잘되었던 사진을 첨부하여 해석합니다 사진을 통해서 볼 수 있듯 n=8일때 입니다. 3. 코드 Reference 아직 배움의 단계라 정확한 정보가 아닐 수 있습니다.😂 피드백은 seoungin1228@gmail.com 으로 부탁드리겠습니다☺️ 본문의 사진 출처","frontmatter":{"categories":"알고리즘","title":"3*n 타일링 JS [Lv2]","date":"October 03, 2022"},"fields":{"slug":"/Algorithm/LV2/3*n 타일링/"}}},{"node":{"id":"c03ec537-78d4-52c3-95e9-974f131341d2","excerpt":"1. 문제소개 다음 큰 숫자 자연수 n이 주어졌을 때, n의 다음 큰 숫자는 다음과 같이 정의 합니다. 조건 1. n의 다음 큰 숫자는 n보다 큰 자연수 입니다.\n조건 2. n의 다음 큰 숫자와 n은 2진수로 변환했을 때 1의 갯수가 같습니다.\n조건 3. n의 다음 큰 숫자는 조건 1, 2를 만족하는 수 중 가장 작은 수 입니다.\n예를 들어서 78(1001110)의 다음 큰 숫자는 83(1010011)입니다. 자연수 n이 매개변수로 주어질 때, n의 다음 큰 숫자를 return 하는 solution 함수를 완성해주세요. 제한 사항\nn은 1,000,000 이하의 자연수 입니다. 2. 문제풀이 이전에서 이진변환 반복하기를 통해서 익힌 toString을 통한 이진수로의 변환을 이용합니다.\n이동한 후 map 함수를 통해서 각 1을 count를 하여 수를 늘려줍니다. 3. 코드 4. 정리! 1을 셀수 있는 방법이 굉장히 많지만 저는 간단하게 배열로 전환한 후 map을 통해서 1인 경우 co…","frontmatter":{"categories":"알고리즘","title":"다음 큰 숫자 JS [Lv2]","date":"October 03, 2022"},"fields":{"slug":"/Algorithm/LV2/다음 큰 숫자/"}}},{"node":{"id":"cb402a23-d26a-5718-b769-b5d48faccff6","excerpt":"1. 문제소개 숫자의 표현 Finn은 요즘 수학공부에 빠져 있습니다. 수학 공부를 하던 Finn은 자연수 n을 연속한 자연수들로 표현 하는 방법이 여러개라는 사실을 알게 되었습니다. 예를들어 15는 다음과 같이 4가지로 표현 할 수 있습니다. 1 + 2 + 3 + 4 + 5 = 15\n4 + 5 + 6 = 15\n7 + 8 = 15\n15 = 15\n자연수 n이 매개변수로 주어질 때, 연속된 자연수들로 n을 표현하는 방법의 수를 return하는 solution를 완성해주세요. 2. 문제풀이 초기에 규칙성을 찾아보려고 했으나 찾을 수 없었습니다.\n홀 , 짝 혹은 약수들간의 관계를 찾아보려고 했습니다.\n하지만 총 입력되는 문자열의 크기가 10000이라는 나름 합리적인 값이라는 생각에\n완전탐색을 트라이 하게 되었습니다. 여기에는 조금더 합리적인 근거가 있었는데\n하나의 시작지점에서는 하나의 수식만이 만들어진다는 점이었습니다. 3. 코드 여기까지가 완전탐색을 사용한 풀이였습니다. 일반적인 경우 모…","frontmatter":{"categories":"알고리즘","title":"숫자의 표현 JS [Lv2]","date":"October 03, 2022"},"fields":{"slug":"/Algorithm/LV2/숫자의 표현/"}}},{"node":{"id":"27141dfd-de81-5ec9-89b3-21211c3ecb6e","excerpt":"1. 문제소개 피보나치 수열 피보나치 수는 F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여 F(n) = F(n-1) + F(n-2) 가 적용되는 수 입니다. 예를들어 F(2) = F(0) + F(1) = 0 + 1 = 1 F(3) = F(1) + F(2) = 1 + 1 = 2 F(4) = F(2) + F(3) = 1 + 2 = 3 F(5) = F(3) + F(4) = 2 + 3 = 5 와 같이 이어집니다. 2 이상의 n이 입력되었을 때, n번째 피보나치 수를 1234567으로 나눈 나머지를 리턴하는 함수, solution을 완성해 주세요. 2. 문제풀이 DP를 이용해 문제를 풀어냅니다. 가장 기본 형태에 해당하는 문제 이며 각 시행의 결과를 %1234567로 나누어 주는 과정이 필요합니다.\n첫 시행에서 return 되는 결과에만 % 1234567을 해주어 틀렸습니다. 3. 코드 4. 정리! Reference 아직 배움의 단계라 정확한 정보가 아닐 수 있습니다.😂 피…","frontmatter":{"categories":"알고리즘","title":"피보나치 수열 JS [Lv2]","date":"October 03, 2022"},"fields":{"slug":"/Algorithm/LV2/피보나치 수열/"}}},{"node":{"id":"b89fe4ee-95b3-56f9-b7ad-1c20b59717a9","excerpt":"1. 문제소개 올바른 괄호 괄호가 바르게 짝지어졌다는 것은 ’(’ 문자로 열렸으면 반드시 짝지어서 ’)’ 문자로 닫혀야 한다는 뜻입니다. 예를 들어 ”()()” 또는 ”(())()” 는 올바른 괄호입니다.\n”)()(” 또는 ”(()(” 는 올바르지 않은 괄호입니다.\n’(’ 또는 ’)’ 로만 이루어진 문자열 s가 주어졌을 때, 문자열 s가 올바른 괄호이면 true를 return 하고, 올바르지 않은 괄호이면 false를 return 하는 solution 함수를 완성해 주세요. 2. 문제풀이 stack을 통해서 괄호가 input될때, stack에 가장 최근에 입력된 요소와 비교해서 연산을 진행합니다.\narray기본 연산들중 하나인 pop을 통해서 아주 손쉽게 해결할 수 있습니다. 3. 코드 4. 정리! Reference 아직 배움의 단계라 정확한 정보가 아닐 수 있습니다.😂 피드백은 seoungin1228@gmail.com 으로 부탁드리겠습니다☺️","frontmatter":{"categories":"알고리즘","title":"올바른 괄호 JS [Lv2]","date":"October 03, 2022"},"fields":{"slug":"/Algorithm/LV2/올바른 괄호/"}}},{"node":{"id":"f7a3c8a1-df95-513b-a8a9-5ac0e656d6c3","excerpt":"1. 문제소개 이진변환 반복하기 0과 1로 이루어진 어떤 문자열 x에 대한 이진 변환을 다음과 같이 정의합니다. x의 모든 0을 제거합니다. x의 길이를 c라고 하면, x를 “c를 2진법으로 표현한 문자열”로 바꿉니다. 예를 들어, x = “0111010”이라면, x에 이진 변환을 가하면 x = “0111010” -> “1111” -> “100” 이 됩니다. 0과 1로 이루어진 문자열 s가 매개변수로 주어집니다. s가 “1”이 될 때까지 계속해서 s에 이진 변환을 가했을 때, 이진 변환의 횟수와 변환 과정에서 제거된 모든 0의 개수를 각각 배열에 담아 return 하도록 solution 함수를 완성해주세요. 2. 문제풀이 js에 내장된 2진 변환 코드 방법을 알고 있다면 훨씬 빠르게 풀 수 있습니다. 하지만 아닌 2진 변환을 직접 구현하여 문제를 해결하였습니다. 문제는 크게 3부분으로 구성되어 있습니다. solution 함수 : 문자열을 받아서 while문을 통해 제한조건까지 함수…","frontmatter":{"categories":"알고리즘","title":"이진변환 반복하기 JS [Lv2]","date":"October 02, 2022"},"fields":{"slug":"/Algorithm/LV2/이진변환 반복하기/"}}},{"node":{"id":"02081997-48b2-544b-acf9-39090dd8ecfa","excerpt":"1. 문제소개 최솟값 만들기 길이가 같은 배열 A, B 두개가 있습니다. 각 배열은 자연수로 이루어져 있습니다.\n배열 A, B에서 각각 한 개의 숫자를 뽑아 두 수를 곱합니다. 이러한 과정을 배열의 길이만큼 반복하며, 두 수를 곱한 값을 누적하여 더합니다. 이때 최종적으로 누적된 값이 최소가 되도록 만드는 것이 목표입니다. (단, 각 배열에서 k번째 숫자를 뽑았다면 다음에 k번째 숫자는 다시 뽑을 수 없습니다.) 2. 문제풀이 배열의 크기가 1000 이므로 BFS로 푸는 경우 총 연산의 가짓수는 1000! * 1000!가 된다.\n따라서 이 방법을 사용해서는 안된다. 반대로 가장 최대가 되는 방법을 생각해본다.\n당연히 가장 값이 비슷한 값들이 곱해지는 것이다. ex) 두수의 합이 10일때, 5 * 5 가 가장 큰 경우의 수다. A는 오름차순으로 졍렬 , B는 내림차순으로 정렬 후 각 원소를 서로 곱해준다. 3. 코드 4. 정리! 최댓값 최솟값\n문제에서 정리한 sort를 사용합니다. …","frontmatter":{"categories":"알고리즘","title":"최솟값 만들기 JS [Lv2]","date":"October 02, 2022"},"fields":{"slug":"/Algorithm/LV2/최솟값 만들기/"}}},{"node":{"id":"c9519f66-eaf0-5cb4-bfa6-29f26ee723d2","excerpt":"1. 문제소개 JadenCase 만들기 JadenCase란 모든 단어의 첫 문자가 대문자이고, 그 외의 알파벳은 소문자인 문자열입니다. 단, 첫 문자가 알파벳이 아닐 때에는 이어지는 알파벳은 소문자로 쓰면 됩니다. (첫 번째 입출력 예 참고)\n문자열 s가 주어졌을 때, s를 JadenCase로 바꾼 문자열을 리턴하는 함수, solution을 완성해주세요. 2. 문제풀이 문자열 -> 배열 후에 조건에 맞추어 출력합니다. (문제는 JadenCase만들기 인데 왜 제목은 JadenCase가 아니지…?) 3. 코드 4. 정리! 신규 아이디 추천\n문제에서 사용한 toLowerCase()의 반대 버전인 toUpperCase()를 각 원소별로 사용합니다. +) 다른 분의 풀이 입력받은 문자열을 공백을 기준으로 나누어 배열로 만들어 준다. 배열로 나누어진 각 원소들의 첫문자는 toUpperCase 를 통해서 대문자로 만들어준뒤 나머지 문자들을 첫 원소를 제외하고 모두 toLowerCase를 사용…","frontmatter":{"categories":"알고리즘","title":"JadenCase 만들기 JS [Lv2]","date":"October 02, 2022"},"fields":{"slug":"/Algorithm/LV2/JadenCase 문자열 만들기/"}}},{"node":{"id":"3bb3f1f3-debd-5bed-919e-51727f262f20","excerpt":"1. 문제소개 최댓값과 최솟값 문자열 s에는 공백으로 구분된 숫자들이 저장되어 있습니다. str에 나타나는 숫자 중 최소값과 최대값을 찾아 이를 “(최소값) (최대값)“형태의 문자열을 반환하는 함수, solution을 완성하세요. 예를들어 s가 “1 2 3 4”라면 “1 4”를 리턴하고, “-1 -2 -3 -4”라면 “-4 -1”을 리턴하면 됩니다. 2. 문제풀이 sort를 적절하게 사용하여 풀 수 있는 문제입니다. 3. 코드 4. 정리! sort는 js에서 제공되는 아주 편리한 정렬 함수입니다. 일반적으로 배열.sort()를 사용하는 경우 아스키 코드를 기준으로 정렬이 되기 때문에 특별한 조치를 취해 주어야 합니다. sort((a,b) => a-b) 는 일반적으로 오름차순 정렬이 수행됩니다. 그 이유를 확인해보겠습니다. Reference 아직 배움의 단계라 정확한 정보가 아닐 수 있습니다.😂 피드백은 seoungin1228@gmail.com 으로 부탁드리겠습니다☺️","frontmatter":{"categories":"알고리즘","title":"최댓값과 최솟값 JS [Lv2]","date":"October 02, 2022"},"fields":{"slug":"/Algorithm/LV2/최댓값과 최솟값/"}}},{"node":{"id":"02c6c258-a550-537b-8198-407bb8c9d5d5","excerpt":"1. 문제소개 2021 KAKAO BLIND RECRUITMENT의 신규 아이디 추천 문제 1단계 new_id의 모든 대문자를 대응되는 소문자로 치환합니다. 2단계 newid에서 알파벳 소문자, 숫자, 빼기(-), 밑줄(), 마침표(.)를 제외한 모든 문자를 제거합니다. 3단계 new_id에서 마침표(.)가 2번 이상 연속된 부분을 하나의 마침표(.)로 치환합니다. 4단계 new_id에서 마침표(.)가 처음이나 끝에 위치한다면 제거합니다. 5단계 new_id가 빈 문자열이라면, new_id에 “a”를 대입합니다. 6단계 new_id의 길이가 16자 이상이면, new_id의 첫 15개의 문자를 제외한 나머지 문자들을 모두 제거합니다. 만약 제거 후 마침표(.)가 new_id의 끝에 위치한다면 끝에 위치한 마침표(.) 문자를 제거합니다. 7단계 new_id의 길이가 2자 이하라면, new_id의 마지막 문자를 new_id의 길이가 3이 될 때까지 반복해서 끝에 붙입니다. 2. 문제풀이…","frontmatter":{"categories":"알고리즘","title":"신규 아이디 추천 JS [Lv1]","date":"October 01, 2022"},"fields":{"slug":"/Algorithm/LV1/신규 아이디 추천/"}}},{"node":{"id":"04eb11a9-8c83-5c63-aa08-b5ec415ec6ad","excerpt":"😎 브라우저란? 브라우저란 동기(Synchronous)적으로 (HTML + CSS), Javascript 언어를 해석하여 내용을 화면에 보여주는 응용 소프트웨어입니다.  브라우저의 주된 기능은 사용자가 원하는 정보를 서버에 요청하고 브라우저에 표시하는것입니다.\n여기서 원하는 정보의 종류는 크게 Html , img, pdf 등입니다.\n여기서 정보의 종류 특히나 Html을 구분하는 것은 주소라고 하며, 이는 Url(Uniform Resource Locator) 이라고 합니다. 브라우저의 종류에는 크롬, 사파리, 파이어폭스 (오픈소스 기반) , 네이버 웨일 등등 다양한 종류의 브라우저가 존재합니다.\n\n\n최근 유저들의 브라우저 점유율 입니다. 크롬과 사파리가 대부분을 차지하는것으로 보입니다.  브라우저의 구성요소 브라우저의 여러 구성 요소가 있지만 브라우저 렌더링 과정에 중심이 되는 요소들을 중심으로 작성하겠습니다. 1. User Interface 주소 표시줄 , 이전 앞으로 가기 버튼,…","frontmatter":{"categories":"짧은지식","title":"브라우저 렌더링","date":"July 25, 2022"},"fields":{"slug":"/브라우저 렌더링/"}}},{"node":{"id":"736e31c5-9376-5bfc-95e9-1e615280118f","excerpt":"서론 이번에는 지난 시간에 배운 js를 통한 dom 접근 방법들을 활용해 가며 프로그래머스 “2022 Dev-Matching: 웹 프론트엔드 개발자(상반기) 프로그래밍 언어 검색” 과제를 풀어보도록 하겠습니다. 본 글은 프로그래머스 기술 블로그에 기술된 과제 해설을 따라 가되 제 개인적인 코드 해석을 추가하면서 진행됩니다. 문제 소개 image 프로그래머스 에서 풀어볼 수 있습니다. 코드 작성 기본 셋팅 아주 기초적인 html을 작성합니다. style.css는 문제를 풀때 추가 되어 있으나 여기서는 추가하지 않고 하단의 Link에서 추가하도록 하겠습니다. script 태그는 body 태그의 최하단에 위치하는 것이 좋습니다. 왜냐하면 렌더링 엔진이 Html을 파싱하다가 script 태그를 만나게 된다면 Html 문서의 파싱을 중단하고 js 파일을 로드하게 됩니다. 이 경우 html문서를 파싱하는 과정에 있어서 2가지 문제가 발생하게 됩니다. 첫번째는 js 로드가 끝날때까지 화면에 표…","frontmatter":{"categories":"멋사FE","title":"(멋사FE) 프로그래밍 언어 검색 문제 풀기","date":"July 05, 2022"},"fields":{"slug":"/프로그래밍 언어 검색/"}}},{"node":{"id":"aae44cdf-a9b5-503a-82dc-e81cef899ad0","excerpt":"이 문서는 멋쟁이 사자처럼 FE를 위한 교육자료로 작성되었습니다. 👋 state란 우리는 react를 배우기 전 js의 기초 문법을 배우면서 변수를 선언하는 여러 가지 방법에 대해 배웠습니다. \nvar, let, const와 같은 것들이었죠. 우리는 그리고 컴포넌트 내부에 값을 전달하는 방식인 prop을 배웟습니다. 그런데 state는 무엇이고 우리는 왜 배워야 할까요?\n그 이유는 state는 setState를 통해서 컴포넌트의 state객체에 대한 업데이트를 실행합니다. 그리고 state의 변화가 감지되면 해당 컴포넌트에 작동하는 부분을 Re-Rendering시키게 됩니다.\nre-rendering은 간단하게 화면에 뷰를 다시 새롭게 보여준다는 의미입니다. 정확한 표현으로는 조화과정(Reconciliation)이라고 칭합니다.\nimage\n위의 사진은 Dom 트리와 Virtual Dom 을 보여줍니다. 여기서 중요한 점은 view를 변형시키는 것이 아닌 render함수로 인해서 새로…","frontmatter":{"categories":"멋사FE","title":"(멋사 FE) useState를 통해서 react에서 Re-Rendering 이해하기","date":"June 14, 2022"},"fields":{"slug":"/react state/"}}},{"node":{"id":"22d7d254-51ce-5c97-abb5-b7e9d3c43657","excerpt":"오류 상황… [Failed to load module script: Expected a JavaScript module script but the server responded with a MIME type of “text/html”. Strict MIME type checking is enforced for module scripts per HTML spec.] 프로그래머스 과제테스트 중 하나인 쇼핑몰 SPA를 작업하다가 발생한 오류 입니다. 또한 routing 처리가 필요한 과제였으니 ”/” 위치 뿐아닌 “/product/:productID”등 / 를 추가하자마자 오류가 발생하였습니다. 처음 이 오류를 마주했을때는 “흠, 뭐 별거 아니겠지~” 라고 생각했지만… 생각보다 많은 시간을 사용한 끝에 해결할 수 있었습니다. 해당 문제의 대부분의 해설은 보통 리엑트나 다른 프레임워크에서 어느정도 경로에 대한 자비로운 처리를 통해서 신경 쓰지 않았던 부분에 대한 해설이었습니다. ex) 다…","frontmatter":{"categories":"짧은지식","title":"index.js 파일이 읽혀지지 않는경우엔 어떻게 해결해야 할까?","date":"May 30, 2022"},"fields":{"slug":"/html,css 문서 읽기/"}}},{"node":{"id":"6604ad55-9b84-5de5-b9e3-6169e6136139","excerpt":"패턴 매칭 텍스트 스트링에서 원하는 문자 패턴을 찾아 내는 것 패턴 기술 접합(concatenation) 패턴에서 인접해 있는 두 문자가 텍스트에서 나타나면 매치 논리합(or) 두개의 문자 중 하나가 텍스트에 나타나면 매치 폐포(closure) 특정한 문자가 0개 이상 나타나면 매치합니다. 패턴매칭 방법들중 비결정적 알고리즘(Non-deterministic algorithms)을 사용한 방법을 적어보겠습니다. 비결정적 알고리즘이란 알고리즘 분류 방법들 중 결정적 혹은 비결정적 (Deterministic or non-deterministic)에 따라서 분류 하는 방법을 의미합니다. 패턴 매칭 장치 - 결정적 장치 결정적 알고리즘(Deterministic algorithms) 각각의 상태가 다음 입력 문자로 인해서 완전하게 결정되는 것을 의미합니다. 즉, 계산의 각단계에서 단 한가지의 가능성만을 고려할 수 있는 알고리즘을 의미합니다. 결정적 알고리즘에 해당하는 문제들은 동일한 입력에 …","frontmatter":{"categories":"짧은지식","title":"🔎 패턴 매칭 장치 (비결정적)","date":"May 29, 2022"},"fields":{"slug":"/패턴매칭 알고리즘/"}}},{"node":{"id":"3a58a65d-46f5-50b7-9ac4-0ea5db51d5c9","excerpt":"이 문서는 멋쟁이 사자처럼 FE를 위한 교육자료로 작성되었습니다. 멋쟁이 사자처럼 10기 FE 4주차 과제 🦁 반갑습니다 여러분!!☺️\n벌써 react의 정말 재밌는! 필수적인 요소인 hooks를 다뤄보는 시간입니다! 실습 진행방법 기존의 실습들과 동일하게 진행됩니다 이 레포를 fork 한다! fork하여 이동한 자신의 레포에서 깃크라켄을 통해 클론을 받습니다. 클론을 받은 파일을 vs 코드에서 엽니다! vs 코드에서 터미널을 열어서 npm i 후 npm run start 를 입력하면 코드가 실행됩니다! 이번 실습도 2주차와 마찬가지로 3차에 걸쳐서 진행됩니다! 마지막까지 열심히 진행해보시죠 ㅎㅎ 실습 1번문제 InputSample 컴포넌트는 name과 nickname을 입력받아서 render시키는 컴포넌트 입니다. 해당 기능을 수행하기 위해 주석이 있는 부분을 채워 기능을 완성시켜 봅시다\nimage\nimage 주석을 채워서 name과 nickname 을 입력받아 봅시다!\n해당하는 …","frontmatter":{"categories":"멋사FE","title":"(멋사 FE) 4주차 과제 해설","date":"May 29, 2022"},"fields":{"slug":"/멋사FE week4/"}}},{"node":{"id":"93be66a7-4e15-513b-a5a2-1858e7f06632","excerpt":"다산(茶山) 정약용(丁若鏞, 1762~1836) 다산 정약용은 유형원(柳馨遠) · 이익(李瀷)의 학문과 사상을 계승하여 조선후기 경세치용 (經世致用)을 주장하면서 토지개혁과 농민생활의 안정을 꾀한 실용적인 학자였습니다. 다산은 두번의 유배를 떠났는데, 첫 번째 유배는 1789년 가톨릭 교인이라는 공서파의 탄핵을 받아서 海美(해미)에 10일간 유배 갔습니다. 이때 남긴 한시는 없습니다. 두 번째 유배 는 1800년 正祖(정조) 死後(사후), 노론 벽파에 의해 이루어졌습니다. 노론 벽파는 1801년 2월 천주교도들이 청나라 주문모 신부를 끌어드려 역 모를 꾀했다는 죄명을 내세워 신사사옥을 일으켰습니다. 이 때 매형 이승훈, 둘째형 정약전, 그리 고 셋째 형 정약종 등과 체포되어 2월 27일 경상북도 장기(영일만)로 유배되었습니다. 10월에는 큰 형님 정약현의 큰 사위 곧 다산의 조카사위인 황사영 백서사건으로 인해 서울로 압송된 후 11월에 전라남도 강진으로 이배되었습니다. 그로부터 1…","frontmatter":{"categories":"짧은지식","title":"📖 유배지에서의 다산(茶山)의 시","date":"May 24, 2022"},"fields":{"slug":"/유배지에서의 다산의 시/"}}},{"node":{"id":"a86fe481-95e8-5de5-8225-faef5221d897","excerpt":"Detection and Segmentation Detection은 영상 내부에서 찾고자 하는 요소를 찾을 때 사용하며, Segmentation은 해당 영역을 구분해내는 역할을 수행합니다. Detection\n\n\n물체의 위치를 찾습니다. (localization) Sematic Segmentation\n\n\n화소나 색등 비슷한 요소를 모아서 영역화를 진행합니다. Instance Segmentation\n\n\n카테고리별로 서로 다른 객체를 찾습니다. 앞선 내용에서 설명하진 않았지만 중요한 내용인 Classification(분류)가 있습니다. 해당 영상에서 대표하는 값을 찾아서 어떤 영상인지 분류합니다. Detection 과 Segmentation 모두 이를 위한 과정입니다. Semantic segmentation vs Instance segmentation 반대로 Instance segmentation은 각 픽셀별로 어떤 카테고리에 속하는지 계산하는 것이 아닌\n각 픽셀별로 object가 있는…","frontmatter":{"categories":"짧은지식","title":"📷 Clustering and Segmentation","date":"May 24, 2022"},"fields":{"slug":"/Clustering and Segmentation/"}}},{"node":{"id":"79ec7d9a-20b5-5464-b367-a81de754e590","excerpt":"이 문서는 멋쟁이 사자처럼 FE를 위한 교육자료로 작성되었습니다. 멋쟁이 사자처럼 10기 FE 3주차 과제 🦁 반갑습니다 여러분!!\n지난 2주차 세션 때 React.js에 대해서 재밌게 열심히 실습을 잘 진행하셨나요?\n다들 정말 잘하시던데… 처음 배우시는건지 살짝 의문이 드는데 괜찮으시겠어요..? 실습 진행방법 3주차는 과제 중심으로 세션이 진행됩니다!\nComponent를 만들어서 샤샤샥 주어진 홈페이지를 구현하고, PR을 올리고 웹페이지를 배포하세요😀 이 레포를 fork 한다! fork하여 이동한 자신의 레포에서 깃크라켄을 통해 클론을 받습니다. 클론을 받은 파일을 vs 코드에서 엽니다! vs 코드에서 터미널을 열어서 npm run start 를 입력하면 코드가 실행됩니다! 3주차 MISSION : Bootstrap Album 페이지 클론코딩 해오기 https://getbootstrap.com/docs/4.3/examples/album/ 클론코딩(Clone-Coding)이란? :…","frontmatter":{"categories":"멋사FE","title":"(멋사 FE) 3주차 과제 해설","date":"May 21, 2022"},"fields":{"slug":"/멋사FE week3/"}}},{"node":{"id":"72bc3c52-ee2f-5e11-b442-c0562b00f2b6","excerpt":"이 문서는 멋쟁이 사자처럼 FE를 위한 교육자료로 작성되었습니다. 멋쟁이 사자처럼 10기 FE 2주차 과제 🦁 반갑습니다 여러분!!☺️\n2주차부터 약 4주간 함께 진행할 10기 운영진 이성인입니다 ☺️\nreact는 크게 어렵지 않습니다! 다같이 열심히 하시죠 ㅎㅎ 실습 진행방법 기존의 실습들과 동일하게 진행됩니다 이 레포를 fork 한다! fork하여 이동한 자신의 레포에서 깃크라켄을 통해 클론을 받습니다. 클론을 받은 파일을 vs 코드에서 엽니다! vs 코드에서 터미널을 열어서 npm run start 를 입력하면 코드가 실행됩니다! 이번 실습은 3차에 걸쳐서 진행됩니다! 마지막까지 열심히 진행해보시죠 ㅎㅎ 실습 1번문제 여러분은 프론트 엔드 작업을 진행하시면서 글자에 효과를 어떻게 주셨나요? 매번 id, class를 통해서 받지 않으셨나요?\nText 컴포넌트를 수정하며 다양한 순간에 재사용성이 뛰어난 코드를 만들어봅시다! 제한조건 text-weight , text-size 를 pr…","frontmatter":{"categories":"멋사FE","title":"(멋사 FE) 2주차 과제 해설","date":"May 17, 2022"},"fields":{"slug":"/멋사FE week2/"}}},{"node":{"id":"476a2153-b3e6-574e-adc2-2b1b868fe5ab","excerpt":"서론 지금 까지 배웠던 HTML, CSS, JS기초 문법들을 통해서 간단한 기능 구현을 해보겠습니다. 복습 - js 를 통한 dom 접근 간단한 todoList 를 만들어보면서 js를 통해 dom에 접근해 보겠습니다. 평범하게 시작할 수 있는 html 파일에 data 배열 형태로 text를 넣어주었습니다.\n그 후 document.querySelector 를 통해 내부의 innerHtml에 접근 하여 그 값을 조작합니다.\n(querySelector 는 선택한 선택자를 포함한 태그 뭉치들 중에서 가장 ‘첫번째’ 요소를 선택합니다. ([mdn]https://developer.mozilla.org/ko/docs/Web/API/Document/querySelector)) (+) 탐색은 깊이 우선 전위순회를 통해서 찾게 되며 문서의 첫번째 요소부터 시작해 자식노드를 모두 검사합니다. )\ndata라는 배열에 map 함수를 사용하여 내부의 innerHtml을 변경합니다. 변경될 값을 예상해 보자…","frontmatter":{"categories":"멋사FE","title":"(멋사 FE) TodoList 구현","date":"May 15, 2022"},"fields":{"slug":"/Todolist 구현으로 배우는 JS/"}}},{"node":{"id":"49ad6317-25c8-517a-aab6-b850d665625f","excerpt":"이 문서는 멋쟁이 사자처럼 FE를 위한 교육자료로 작성되었습니다. 실습 목표 js를 통해서 프로그래밍에 언어에 대해서 학습한다. js의 입출력 , 조건문, 반복문, 배열 에 대해 학습합니다. 실습 문제 입출력 Hello World : https://www.acmicpc.net/problem/2557 사칙연산 : https://www.acmicpc.net/problem/10869 조건문 시험 성적 : https://www.acmicpc.net/problem/9498 윤년 : https://www.acmicpc.net/problem/2753 반복문 N 출력 https://www.acmicpc.net/problem/2741 별찍기 -1 https://www.acmicpc.net/problem/2438 배열 최소, 최대\nhttps://www.acmicpc.net/problem/10818 나머지\nhttps://www.acmicpc.net/problem/3052 제출 방법 사전과제의 제출 방…","frontmatter":{"categories":"멋사FE","title":"(멋사 FE) 1주차 과제 해설","date":"May 10, 2022"},"fields":{"slug":"/멋사FE week1/"}}},{"node":{"id":"8e5e2e51-81f8-5b02-b396-6d54fe877e49","excerpt":"npx로 시작하는 react! 직접 react를 기반으로 시작해 보겠습니다!!\n사전 준비가 몇가지 필요합니다!\nvs code 상에서 터미널을 통해서 해당 명령어를 입력해 주어야 합니다! (만약 깃크라켄을 통해서 프로젝트를 시작한 경우 프로젝트 명이 결정되어 있고 폴더가 생성되어 있는 경우가 있습니다. 이경우 npx create-react-app . 이라는 명령어를 대신하여 사용합니다. 이럴땐 해당 폴더의 위치에서 create-react-app이 실행됩니다.) 아래와 같이 입력하면 됩니다.\n현재 폴더의 위치 : 바탕화면/이성인/)\n 여기서 start-react 라는 이름으로 폴더가 현재 위치에 생성되게 되며, 해당 위치로 꼭 이동해 주어야 합니다. 현재 폴더의 위치 : 바탕화면/이성인/start-react) 현재 위치를 확인하는 명령어 : pwd\n(만약 현재 위치에서 이동하고 싶다면 cd 명령어를 통해 이동합니다.) 현재 위치가 생성한 프로젝트명과 동일한 경우 위와같은 명령어를 입력…","frontmatter":{"categories":"멋사FE","title":"(멋사 FE) 간단하게 시작하는 react!","date":"May 08, 2022"},"fields":{"slug":"/리액트 시작하기/"}}},{"node":{"id":"3b36d28b-4356-5206-bee2-16545abd597d","excerpt":"😎 자기소개 사람은 채울수록 더 진중하고 무거운 사람이 된다고들 합니다. 저는 그럼에도 제가 가진걸 나누고 비우기에 관심이 있습니다. 나의 능력과 배움이 부족할 지라도 누군가에게 가치가 있다면 아낌없이 나누고 싶습니다. 지식을 나누고 함께 성장함에 즐거움을 느끼며 누군가에게 도움이 되는것에 큰 기쁨을 느낍니다. 이 블로그 또한 저를 비워내는 과정들 중 하나리라 생각합니다. 현재 상황 인하대학교 정보통신공학과 3학년 FE에 관심을 가지게 된지 약 1년(2021.7 ~ 현재) 멋쟁이 사자처럼 9기(웹 서비스에 흥미를 가짐) 멋쟁이 사자처럼 10기 운영진 (FE) css실력 : 디자인이 있는 기초적인 view 작업은 가능 (다만 animation , 가상선택자 등은 미숙) js실력 : react를 통해서 js를 익혔기에 기초가 많이 부족 react : styled-component, props, useState, useEffect등 어렵지 않은 개념 정도만 알고 있음 git : 다수의 …","frontmatter":{"categories":"일상","title":"만나서 반가워요!","date":"May 08, 2022"},"fields":{"slug":"/블로그 시작/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"이성인","bio":{"role":"개발자","description":["배움에 진심을 다하는","나눔의 즐거움을 아는"],"thumbnail":"sample.jpeg"},"social":{"github":"","linkedIn":"","email":""}}}}},"pageContext":{}},"staticQueryHashes":["1073350324","1956554647","2938748437","3350743975"]}